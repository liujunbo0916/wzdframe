<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easaa.scenicspot.dao.TicketMapper">
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" />
	<!-- 文化分类 -->
	<select id="categorySelectByMap" parameterType="pd" resultType="pd">
		select * from t_scenic_ticket_category where 1 = 1
		<if test="id != null and id != ''">
			and id = #{id}
		</if>
		order by cate_desc desc
	</select>
	<update id="categoryUpdate" parameterType="pd">
		update t_scenic_ticket_category
		<set>
			<if test="cate_name != null and cate_name != ''">
				cate_name = #{cate_name},
			</if>
			<if test="cate_fit != null and cate_fit != ''">
				cate_fit = #{cate_fit},
			</if>
			<if test="cate_clause != null and cate_clause != ''">
				cate_clause = #{cate_clause},
			</if>
			<if test="cate_desc != null and cate_desc != ''">
				cate_desc = #{cate_desc},
			</if>
		</set>
		where id = #{id}
	</update>
	<insert id="categoryInsert" parameterType="pd">
		insert into
		t_scenic_ticket_category(cate_name,cate_fit,cate_clause,cate_desc)
		values(#{cate_name},#{cate_fit},#{cate_clause},#{cate_desc})
	</insert>

	<delete id="categoryDel" parameterType="pd">
		delete from t_scenic_ticket_category where id = #{id}
	</delete>

	<select id="selectByMap" resultType="pd" parameterType="page">
		select * from t_scenic_ticket
		where 1 = 1
		<if test="pd.cate_id != null and pd.cate_id!= ''">
			and cate_id = #{pd.cate_id}
		</if>
		<if test="pd.third_no != null and pd.third_no != ''">
			and third_no = #{pd.third_no}
		</if>
		<if test="pd.scenic_id != null and pd.scenic_id != ''">
			and scenic_id = #{pd.scenic_id}
		</if>
		<if test="pd.id != null and pd.id != ''">
			and id = #{pd.id}
		</if>
	</select>
	<select id="selectByPage" resultType="pd" parameterType="page">
		select t1.*,t2.scenic_logo,t2.scenic_lat,t2.scenic_lng from t_scenic_ticket t1 left join t_scenic_content t2 on t1.scenic_id = t2.id  where 1 = 1
		<if test="pd.cate_id != null and pd.cate_id!= ''">
			and t1.cate_id = #{pd.cate_id}
		</if>
		<if test="pd.third_no != null and pd.third_no != ''">
			and t1.third_no = #{pd.third_no}
		</if>
		<if test="pd.scenic_id != null and pd.scenic_id != ''">
			and t1.scenic_id = #{pd.scenic_id}
		</if>
		<if test="pd.id != null and pd.id != ''">
			and t1.id = #{pd.id}
		</if>
		<if test="pd.keywords != null and pd.keywords != ''">
		    and  (
	                t1.scenic_name LIKE CONCAT(CONCAT('%',#{pd.keywords}),'%')
					or
					t1.cate_name LIKE CONCAT(CONCAT('%',#{pd.keywords}),'%')
					or
					t1.ticket_name LIKE CONCAT(CONCAT('%',#{pd.keywords}),'%')
	           )
		</if>
	</select>
	<select id="selectById" resultType="pd" parameterType="Integer">
		select *
		from t_scenic_ticket where id=#{id}
	</select>
	<select id="selectByIdsStr" resultType="pd" parameterType="pd">
	    select * from t_scenic_ticket where id in ${ticketIds}
	</select>
	
	<insert id="insert" parameterType="pd">
		insert into t_scenic_ticket
		(scenic_id,cate_id,cate_name,ticket_name,third_no,ticket_price,ticket_tip,ticket_package_type,create_time,scenic_name,ticket_isrefund)
		values(#{scenic_id},#{cate_id},#{cate_name},#{ticket_name},#{third_no},#{ticket_price},#{ticket_tip},#{ticket_package_type},#{create_time},#{scenic_name},#{ticket_isrefund})
	</insert>
	<update id="update" parameterType="pd">
		update t_scenic_ticket
		<set>
			<if test="scenic_id != null and scenic_id != ''">
				scenic_id = #{scenic_id},
			</if>
			<if test="cate_id != null and cate_id != ''">
				cate_id = #{cate_id},
			</if>
			<if test="cate_name != null and cate_name != ''">
				cate_name = #{cate_name},
			</if>
			<if test="ticket_name != null and ticket_name != ''">
				ticket_name = #{ticket_name},
			</if>
			<if test="third_no != null and third_no != ''">
				third_no = #{third_no},
			</if>
			<if test="ticket_price != null and ticket_price != ''">
				ticket_price = #{ticket_price},
			</if>
			<if test="ticket_tip != null and ticket_tip != ''">
				ticket_tip = #{ticket_tip},
			</if>
			<if test="ticket_package_type != null and ticket_package_type != ''">
				ticket_package_type = #{ticket_package_type},
			</if>
			<if test="ticket_isrefund != null and ticket_isrefund != ''">
				ticket_isrefund = #{ticket_isrefund},
			</if>
		</set>
		where id = #{id}
	</update>
	<delete id="delete" parameterType="page">
		delete from t_scenic_ticket
		where 1=1
		and id = #{pd.id}
	</delete>

	<!-- 定义app端返回的resultMap -->
	<resultMap type="com.easaa.scenicspot.entity.ticket.TicketListData"
		id="ticketList">
		<id column="scenicId" property="scenicId" />
		<result column="scenicName" property="scenicName" />
		<result column="scenicLogo" property="scenicLogo" />
		<result column="scenicLable" property="scenicLable" />
		<result column="scenicDesc" property="scenicDesc" />
		<result column="scenicContent" property="scenicContent" />
		<result column="scenicTicketPrice" property="scenicTicketPrice" />
		<collection property="ticketCates"
			ofType="com.easaa.scenicspot.entity.ticket.TicketCateData">
			<id column="cateId" property="cateId" />
			<result column="cateName" property="cateName" />
			<result column="cateLogo" property="cateLogo" />
			<collection property="tickets"
				ofType="com.easaa.scenicspot.entity.ticket.TicketData">
				<id column="ticketId" property="ticketId" />
				<result column="ticketName" property="ticketName" />
				<result column="thirdNo" property="thirdNo" />
				<result column="ticketPrice" property="ticketPrice" />
				<result column="ticketPackageType" property="ticketPackageType" />
				<result column="ticketTip" property="ticketTip" />
				<result column="ticketLable" property="ticketLable" />

			</collection>
		</collection>
	</resultMap>
	<select id="selectEntityTicket" parameterType="pd" resultMap="ticketList">
			SELECT
		t1.id AS 'scenicId',
		t1.scenic_name AS 'scenicName',
		t1.scenic_logo AS 'scenicLogo',
		t1.scenic_desc AS 'scenicDesc',
		t1.scenic_lable AS 'scenicLable',
		t1.scenic_ticket_price as 'scenicTicketPrice',
		t1.scenic_buy_count as 'scenicBuyCount',
		t1.scenic_content as 'scenicContent',
		t1.scenic_traffic as 'scenicTraffic',
		t1.scenic_book_know as 'scenicBookKnow',
		t3.id AS 'cateId',
		t3.cate_name AS 'cateName',
		t3.cate_fit AS 'cateFit',
		t2.id AS 'ticketId',
		t2.ticket_name AS 'ticketName',
		t2.third_no AS 'thirdNo',
		t2.ticket_price AS 'ticketPrice',
		t2.ticket_tip AS 'ticketTip',
		t2.ticket_package_type AS 'ticketPackageType',
		t2.ticket_lable AS 'ticketLable'
		FROM
		t_scenic_content t1
		LEFT JOIN t_scenic_ticket t2 ON t2.scenic_id = t1.id
		LEFT JOIN t_scenic_ticket_category t3 ON t2.cate_id = t3.id
		WHERE
		t1.id = #{scenic_id}
		ORDER BY
		t3.cate_desc DESC
	</select>
</mapper>